<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:Firma.ViewModel"
                    xmlns:vw="clr-namespace:Firma.View">
    
    <!--Tutaj łączymy ViewModel z View-->
    <DataTemplate DataType="{x:Type vm:WszystkieNaprawyViewModel}">
        <vw:WszystkieNaprawyView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowaNaprawaViewModel}">
        <vw:NowaNaprawaView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:FakturaViewModel}">
        <vw:FakturaView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:DodajFaktureViewModel}">
        <vw:DodajFaktureView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:AddProduktViewModel}">
        <vw:AddProduktView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:IndeksProduktowViewModel}">
        <vw:Indeks_ProduktowView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyTowarViewModel}">
        <vw:NowyTowarView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowaFakturaViewModel}">
        <vw:NowaFakturaView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyKontaktViewModel}">
        <vw:NowyKontaktView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:NowaOsobaViewModel}">
        <vw:NowaOsoba/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:BadaniaLekarskieViewModel}">
        <vw:BadaniaLekarskie/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:KartotekaOsobowaViewModel}">
        <vw:KartotekaOsobowa/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:HistoriaViewModel}">
        <vw:Historia/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:OdzialyViewModel}">
        <vw:Odzialy/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm:SzkoleniaOkresoweViewModel}">
        <vw:SzkoleniaOresowe/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:WnioskiUrlopoweViewModel}">
        <vw:WnioskiUrlopowe/>
    </DataTemplate>


    <!--<DataTemplate DataType="{x:Type vm:NowaOsobaViewModel}">
        <vw:NowaOsobaView/>
    </DataTemplate>-->



    <!--Style komponentów-->
    <!--Button-->
    <Style x:Key="ButtonStandardowy" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="2,6"/>
    </Style>

    <Style x:Key="ButtonStandardowy2" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="2"/>
    </Style>


    <Style x:Key="ButtonLupa" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="45"/>
        <Setter Property="Width" Value="45"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Margin" Value="2, 6"/>
    </Style>


    <Style x:Key="ButtonSettings" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="Margin" Value="2, 6"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>

    <Style x:Key="ButtonDodaj" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="120"/>
        <Setter Property="Background" Value="LemonChiffon"/>
        <Setter Property="Margin" Value="2, 6"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="ButtonHarmonogram" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="180"/>
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="Margin" Value="2, 6"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <Style x:Key="ButtonZwykły" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="45"/>
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="Margin" Value="2, 6"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <!--ColumnDefinition-->
    <Style x:Key="ColumnSeparacyjnaStandardowa" TargetType="{x:Type ColumnDefinition}">
        <Setter Property="Width" Value="5"/>
    </Style>
    <Style x:Key="ColumnSeparacyjnaDuza20" TargetType="{x:Type ColumnDefinition}">
        <Setter Property="Width" Value="30"/>
    </Style>

    <Style x:Key="ColumnAuto" TargetType="{x:Type ColumnDefinition}">
        <Setter Property="Width" Value="auto"/>
    </Style>

    <Style x:Key="ColumnStandardowa" TargetType="{x:Type ColumnDefinition}">
        <Setter Property="Width" Value="100"/>
    </Style>

    <Style x:Key="ColumnaDuza" TargetType="{x:Type ColumnDefinition}">
        <Setter Property="Width" Value="200"/>
    </Style>


    <Style x:Key="ColumnaBardzoDuza" TargetType="{x:Type ColumnDefinition}">
        <Setter Property="Width" Value="350"/>
    </Style>

    <Style x:Key="ColumnSeparacyjnaWieksza" TargetType="{x:Type ColumnDefinition}">
        <Setter Property="Width" Value="30"/>
    </Style>

    <!--RowDefinition-->
    <Style x:Key="RowDefinitionStandardowa" TargetType="{x:Type RowDefinition}">
        <Setter Property="Height" Value="35"/>
    </Style>
    <Style x:Key="RowDefinitionAuto" TargetType="{x:Type RowDefinition}">
        <Setter Property="Height" Value="auto"/>
    </Style>



    <!--ComboBox-->
    <Style x:Key="ComboBoxStandardowy" TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="2, 6"/>
        <Setter Property="Background" Value="LightGray"/>
    </Style>

    <Style x:Key="ComboBoxStandardowy2" TargetType="{x:Type ComboBox}">
        <Setter Property="Margin" Value="2"/>
    </Style>

    <!--CheckBox-->
    <Style x:Key="CheckBoxTak" TargetType="{x:Type CheckBox}">
        <Setter Property="Content" Value="Tak"/>
        <Setter Property="Margin" Value="2,6"/>
    </Style>
    <Style x:Key="CheckBoxNie" TargetType="{x:Type CheckBox}">
        <Setter Property="Content" Value="Nie"/>
        <Setter Property="Margin" Value="2,6"/>
    </Style>
    <Style x:Key="CheckBoxStandardowy" TargetType="{x:Type CheckBox}">
        <Setter Property="Content" Value="Nie"/>
        <Setter Property="Margin" Value="2,6"/>
    </Style>

    <Style x:Key="CheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="IsChecked" Value="False"/>
        <Setter Property="Margin" Value="2,6"/>
    </Style>

    <Style x:Key="CheckBoxII" TargetType="{x:Type CheckBox}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="IsChecked" Value="False"/>
        <Setter Property="Margin" Value="2,6"/>
    </Style>

    <!--Label-->
    <Style x:Key="LabelStandardowy" TargetType="{x:Type Label}">
        <Setter Property="Height" Value="25"/>
    </Style>

    <Style x:Key="LabelStandardowy2" TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="LabelStandardowyI" TargetType="{x:Type Label}">
        <Setter Property="Background" Value="#FF1EA5E4"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    <Style x:Key="LabelStandardowyII" TargetType="{x:Type Label}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="2, 6"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <!--TextBox-->
    <Style x:Key="TextBoxStandardowy" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="2,6"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="TextBoxStandardowy2" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="TextBoxNieaktywny" BasedOn="{StaticResource TextBoxStandardowy2}" TargetType="{x:Type TextBox}">
        <Setter Property="IsEnabled" Value="False"/>
        <Setter Property="Background" Value="LightGray"/>
    </Style>

    <!--ListBox-->
    <Style x:Key="ListBoxStandardowy" TargetType="{x:Type ListBox}">
        <Setter Property="Height" Value="18"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="Margin" Value="2,6"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
    </Style>

    <Style x:Key="ListBoxStandardowy2" TargetType="{x:Type ListBox}">
        <Setter Property="Margin" Value="2"/>
    </Style>


    <Style x:Key="ListBoxSzeroki" BasedOn="{StaticResource ListBoxStandardowy}" TargetType ="{x:Type ListBox}">
        <Setter Property="Width" Value="150"/>
    </Style>
    <Style x:Key="ListBoxSuperSzeroki" BasedOn="{StaticResource ListBoxStandardowy}" TargetType ="{x:Type ListBox}">
        <Setter Property="Width" Value="420"/>
    </Style>


    <!--Expander-->
    <Style x:Key="ExpanderRozwiniety" TargetType="{x:Type Expander}">
        <Setter Property="IsExpanded" Value="True"/>
        <Setter Property="Background" Value="Azure"/>
        <Setter Property="Margin" Value="0,5"/>
    </Style>

    <!--Expander Rozwinięty-->
    <Style x:Key="ExpanderMenu" TargetType="{x:Type Expander}">
        <Setter Property="IsExpanded" Value="False"/>
        <Setter Property="Background" Value="Gray"/>
        <Setter Property="Margin" Value="0,5"/>
    </Style>



    <!--StackPanel-->
    <Style x:Key="StackPanelStandardowy" TargetType="{x:Type StackPanel}">
        <Setter Property="Background" Value="Azure"/>
        <Setter Property="Margin" Value="4"/>
    </Style>

    <!--DatePicker-->
    <Style x:Key="DatePickerStandardowy" TargetType="{x:Type DatePicker}">
        <Setter Property="Width" Value="150"/>
        <Setter Property="Margin" Value="2,6"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="White"/>
    </Style>
    <Style x:Key="DatePickerSzeroki" BasedOn="{StaticResource DatePickerStandardowy}" TargetType="{x:Type DatePicker}">
        <Setter Property="Width" Value="300"/>
    </Style>

    <Style x:Key="DatePickerStandardowy2"  TargetType="{x:Type DatePicker}">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <!--DataGrid-->
    <Style x:Key="DataGridStandardowy" TargetType="{x:Type DataGrid}">

    </Style>
    <!--Style okna głównego-->
    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border 
            Background="LightGray" 
            BorderBrush="LightGray" 
            BorderThickness="1" 
            CornerRadius="5" 
            Margin="4" 
            Padding="4" 
            SnapsToDevicePixels="True">
                        <TextBlock 
                          FontSize="14"
                          FontWeight="Bold"
                          Foreground="White" 
                          HorizontalAlignment="Center"  
                          Text="{TemplateBinding Content}" 
                          />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- 
        This template ensures that content of a HeaderedContentControl 
        fills the available vertical space. 
        -->
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter 
              DockPanel.Dock="Top"
              ContentSource="Header" 
              ContentTemplate="{TemplateBinding HeaderTemplate}" 
              />
                        <ContentPresenter 
              ContentSource="Content" 
              ContentTemplate="{TemplateBinding ContentTemplate}" 
              />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
  This style ensures that the borders in the main window are consistent.
  -->
    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <!--
  This template explains how to render the list of commands on the left
  side in the main window (the 'Control Panel' area).
  -->
    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="6,2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Margin="2,6">
            <Hyperlink Command="{Binding Path=Command}">
              <TextBlock Text="{Binding Path=DisplayName}" />
            </Hyperlink>
          </TextBlock>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- 
  This template explains how to render 
  a tab item with a close button.
  -->
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel Width="120">
            <Button 
        Command="{Binding Path=CloseCommand}"
        Content="X"
        Cursor="Hand"
        DockPanel.Dock="Right"
        Focusable="False"
        FontFamily="Courier" 
        FontSize="9"
        FontWeight="Bold"  
        Margin="0,1,0,0"
        Padding="0"
        VerticalContentAlignment="Bottom"
        Width="16" Height="16" 
        />
            <ContentPresenter 
        Content="{Binding Path=DisplayName}" 
        VerticalAlignment="Center" 
        />
        </DockPanel>
    </DataTemplate>

    <!--
  This template explains how to render the 'Workspace' content area in the main window.
  -->
    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl 
      IsSynchronizedWithCurrentItem="True" 
      ItemsSource="{Binding}" 
      ItemTemplate="{StaticResource ClosableTabItemTemplate}"
      Margin="4"
      />
    </DataTemplate>
    
    
    

</ResourceDictionary>